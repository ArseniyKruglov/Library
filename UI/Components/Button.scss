@import '../../Basic/Text.scss';
@import '../../Basic/Reset.scss';



Button
{
	Cursor: Pointer;
}



Button.Text
{
	@include Reset_Button;
}

A.Text
{
	@include Reset_A;
}

Button.Text,
A.Text
{
	// Colors

	&
	{
		&:not(.Fill)
		{
			----Text: Var(--Text);
			----Text-Hover: Var(--Text);
			----Background-Hover: Var(--Gray-5);
		}
	}

	&.Main
	{
		&:not(.Fill)
		{
			----Text: Var(--Main-UI);
			----Text-Hover: Var(--Main-UI-Hover);
			----Background-Hover: Var(--Main-UI-Transparent);
		}

		&.Fill
		{
			// @if ($Lightness <= 80%)
			// {
				----Text: #FFFFFF;
				----Text-Hover: #FFFFFF;
			// }
			// @else
			// {
			// 	----Text: #000000;
			// 	----Text-Hover: #000000;
			// }

			----Background: Var(--Main-UI);
			----Background-Hover: Var(--Main-UI-Hover);
		}
	}

	&.Gray
	{
		&:not(.Fill)
		{
			----Text: Var(--Gray-70);
			----Text-Hover: Var(--Text);
			----Background-Hover: Var(--Gray-5);
		}

		&.Fill
		{
			----Text: Var(--Text-Inversed);
			----Text-Hover: Var(--Text-Inversed);
			----Background: Var(--Gray-70);
			----Background-Hover: Var(--Gray-85);
		}
	}

	--Ripple-Color: Var(----Text);



	// Hover

	&:hover
	{
		----Text: Var(----Text-Hover) !important;

		&.Hover,
		&.Roomy,
		&.Outlined,
		&.Fill
		{
			----Background: Var(----Background-Hover) !important;
		}
	}



	// Basic

	Width: Fit-content;
	Max-width: -webkit-fill-available;		// TO DO: Точно?
	Height: Fit-content;
	Background-color: Var(----Background);



	// Text

	&,
	&.Icon > Span
	{
		Font-size: 14px;
		Font-weight: 500;
		Font-family: Var(--Font-UI);
		Color: Var(----Text);
		@include Ellipsis;
	}



	// Transitions

	&.Hover
	{
		Transition: Color 25ms;
	}

	&.Outlined,
	&.Fill
	{
		Transition: Background-color 75ms;
	}




	// Padding

	&.Hover,
	&.Roomy,
	&.Fill,
	&.Outlined
	{
		Border-radius: Var(--Border);
	}

	&.Hover
	{
		Padding: 3px 5px;
	}

	&.Roomy,
	&.Fill,
	&.Outlined
	{
		Padding: 10px 15px;
	}



	// Modifications

	&.Icon
	{
		Display: Inline-flex;
		Align-items: Center;		// TO DO

		Gap: 2.5px;

		&.Roomy,
		&.Fill,
		&.Outlined
		{
			Gap: 7.5px;
		}

		& > Custom-icon
		{
			--Color: Var(----Text);
			--Scale: 20px;
		}

		// & > SVG
		// {
		// 	Width: 20px;
		// 	Height: 20px;

		// 	*
		// 	{
		// 		Fill: Var(--Button-Text);
		// 	}
		// }
	}

	&.Outlined
	{
		Border: 1px Solid Var(----Background-Hover);
	}
}


Button.Floating
{
	--Scale: 56px;

	@include Reset_Button;
	Display: Flex;
	Align-items: Center;
	Justify-content: Center;
	Width: Var(--Scale);
	Height: Var(--Scale);
	Border-Radius: 50%;
	Position: Fixed;
	Right: Var(--Padding);
	Bottom: Calc(Var(--Padding) + Var(--PaddingBottom, 0px));
	Transition: Background-Color 100ms;
	// @include Level-1;
		Z-Index: 1;
		Background-Color: Var(--Background-01);
		Box-Shadow: 0px 1px 2px 0px HSLA(0, 0%, 0%, 25%), 0px 1px 3px 1px HSLA(0, 0%, 0%, 10%);



	& > Custom-icon
	{
		--Scale: Calc(Var(--Scale) / 1.75);
	}

	&:hover
	{
		Background-Color: Var(--Gray-10);
	}

	@media (Min-Width: 700px)
	{
		--Padding: 50px;
	}

	@media not all and (Min-Width: 700px)
	{
		--Padding: 25px;
	}
}